#!/bin/bash
################################
#
# Add Wordpress Box to Vagrant
#
################################
wp_banner()
{
  clear

  BOLD=$(tput bold)
  GREEN=$(tput setaf 2)
  WHITE=$(tput setaf 7)
  BLUE=$(tput setaf 6)
  RESET=$(tput sgr0)

  echo "${BLUE}
                    wwwwwwwwwwwwwwwwwwwwww
                wwwwwwwww            wwwwwwwww
              wwwwww   wwwwwwwwwwwwwwwwww   wwwwww
            wwww   wwwwwwwwwwwwwwwwwwwwwwwwww   wwww
          wwww  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww  wwww
        wwww  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww   wwww
      wwww  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww        wwww
    www  wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww           www
    www          wwwwwwwwww         wwwwwwwww            www
  www  w       wwwwwwwwwwww       wwwwwwwwwww        ww  www
  ww  www       wwwwwwwwwwww       wwwwwwwwwwww      www  www
  ww  wwww       wwwwwwwwwwwww       wwwwwwwwwwww     www  www
  ww  wwwww       wwwwwwwwwwww       wwwwwwwwwwww     wwww  ww
  ww  wwwwww       wwwwwwwwwwww       wwwwwwwwwwww   wwwww  ww
  ww  wwwwwww      wwwwwwwwwwwww       wwwwwwwwwww  wwwwww  ww
  ww  wwwwwww       wwwwwwwwwww        wwwwwwwwwww  wwwwww  ww
  ww  wwwwwwww       wwwwwwwww  w       wwwwwwwww   wwwwww  ww
  ww  wwwwwwwww      wwwwwwwww www       wwwwwwww  wwwwwww  ww
  ww  wwwwwwwww       wwwwwww wwwww      wwwwwwww  wwwwwww  ww
  ww  wwwwwwwwww       wwwww  wwwwww      wwwwww  wwwwwwww  ww
  www  wwwwwwwwww      wwwww wwwwwww       wwwww wwwwwwww  www
    www  wwwwwwwww      www wwwwwwwww      www  wwwwwww  www
    www  wwwwwwwwww      w wwwwwwwwwww      ww wwwwwww  www
      wwww  wwwwwww        wwwwwwwwwww        wwwwww  wwww
        wwww  wwwwww      wwwwwwwwwwwww      wwwww  wwww
          wwww  wwwww    wwwwwwwwwwwwwww     www  wwww
            wwww   ww    wwwwwwwwwwwwwwww       wwww
              wwwwww    wwwwwwwwwwwwwwwww   wwwwww
                wwwwwwwww            wwwwwwwww
                    wwwwwwwwwwwwwwwwwwwwww
  ${RESET}"
  echo "${BOLD}${GREEN}
                Development WordPress Installer
  ${RESET}"
}

wp_banner # Show banner

# VM name
echo "Give the machine a name! (if empty, use autogenerated name)"
read name
if test -n "$name"; then
  echo ""
else
  name=false
fi

# folder name
default_folder="wordpress"
echo "What folder should the Wordpress be installed to? (default: $default_folder)"
read folder
if test -n "$folder"; then
  echo ""
else
  folder=$default_folder
fi

# Which php version to install
php=7.3
while true; do
read -p "Should this box use php5.6 instead of php7.3? [y/N] " yn
  case $yn in
    [Yy]* )
      php=5.6
      break;;
    [Nn]* )
      break;;
    * ) echo "Please answer y or n.";;
  esac
done

# Which database to install
db="mysql"
while true; do
read -p "Should this box use MySQL isntead of MariaDB? [y/N] " yn
  case $yn in
    [Yy]* )
      db="mariadb"
      break;;
    [Nn]* )
      break;;
    * ) echo "Please answer y or n.";;
  esac
done

# Check if user wants to empty out the wp install
purge=false
while true; do
read -p "Do you want to purge WordPress? [y/N] " yn
  case $yn in
    [Yy]* )
      purge=true
      break;;
    [Nn]* )
      break;;
    * ) echo "Please answer y or n.";;
  esac
done

# Check if user wants install migration plugin
migrate=false
while true; do
read -p "Do you want to install migration plugin? [y/N] " yn
  case $yn in
    [Yy]* )
      migrate=true
      break;;
    [Nn]* )
      break;;
    * ) echo "Please answer y or n.";;
  esac
done

# Set database name based on install folder 
dbname="db_$folder"

# Check that info is correct
while true; do
read -p "
Is this correct?
Name:        $name
Folder:      $folder
DB name:     $dbname
PHP version: $php
Database:    $db
Purge WP:    $purge
Migration:   $migrate
Proceed to install? [y/N]
" yn
  case $yn in
    [Yy]* ) break;;
    [Nn]* ) exit;;
    * ) echo "Please answer y or n.";;
  esac
done

# Make new box's folder & copy installation files to it
if test $name = false; then
mkdir new-box
cp Vagrantfile new-box
cp archive.sh new-box
cp restore.sh new-box
cp vagrantstatus.sh new-box
cp sql-actions.sh new-box
cp -r ./provisions new-box
cd new-box
else
mkdir $name
cp Vagrantfile $name
cp archive.sh $name
cp restore.sh $name
cp vagrantstatus.sh $name
cp sql-actions.sh $name
cp -r ./provisions $name
cd $name
fi

# Set the VM name
if test $name != false; then
sed -i "s/vb.name.*/vb.name = \"$name\"/" ./Vagrantfile
else
sed -i 's/vb.name.*/# &/' ./Vagrantfile
fi

# Set ENV vars for Wordpress
sed -i "s/\"NAME\" =>.*/\"NAME\" => \"$folder\",/" ./Vagrantfile
sed -i "s/\"DB\" =>.*/\"DB\" => \"$dbname\",/" ./Vagrantfile
sed -i "s/\"PURGE\" =>.*/\"PURGE\" => $purge,/" ./Vagrantfile
sed -i "s/\"MIGRATE\" =>.*/\"MIGRATE\" => $migrate/" ./Vagrantfile

# Change PHP Version
if test $php != 7.3; then
sed -i "s/php7/php5/" ./Vagrantfile
sed -i "s/php7.3/php5.6/" ./provisions/apache.sh
fi

# Change database version
if test $db != "mysql" ; then
sed -i "s/mariadb/mysql/" ./Vagrantfile
fi

# Get and add machine WLAN mac address to Vagrants bridged connection
mac=$(ipconfig -all | sed -ne '/Wireless LAN adapter WLAN:/,$ p' | sed -n '/Physical Address.*/p'| head -1 | sed 's/Physi.*: //' | tr -d ' -')
sed -i "s/:mac.*/:mac => \"$mac\"/" ./Vagrantfile